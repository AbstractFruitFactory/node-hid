os: unstable
environment:
  prebuild_upload:
    secure: VTBdrNnSESUSm8qkQg41kcul5KV3sLDn+K1MyJpIKmo4BRvFY2FhzL6jAGklV3Cm

  matrix:
  - nodejs_version: "10"
  - nodejs_version: "9"
  - nodejs_version: "8"
  - nodejs_version: "6"

platform:
- x64
- x86

install:
- ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild $env:nodejs_version) $env:platform;
- ps: >
    npm config set progress false
    npm config set spin false
# fix weird "git-sh-setup: file not found" that seems to happen in Node v10
- ps: >
    $env:Path += ";C:\Program Files\Git\mingw64\libexec\git-core"
- ps: >
    @{
      "nodejs_version" = $env:nodejs_version
      "platform" = $env:platform
      "node binary version" = $(node -v)
      "node platform@arch" = $(node -p 'process.platform + process.arch')
      "npm version" = $(npm -v)
      "APPVEYOR_REPO_COMMIT_MESSAGE" = $env:APPVEYOR_REPO_COMMIT_MESSAGE
      "git latest tag" = "$(git describe --tags --always HEAD)"
      "appveyor_repo_tag" = $env:appveyor_repo_tag
    } | Out-String | Write-Host;

# Check if we're building the latest tag, if so
# then we publish the binaries if tests pass.
- ps: >
    if ($env:appveyor_repo_tag -match "true" -and ("$(git describe --tags --always HEAD)" -eq $env:appveyor_repo_tag_name)) {
      $env:publish_binary = "true";
    }
    if ($env:publish_binary -eq "true") {
      "We're publishing a binary!" | Write-Host
    } else {
      "We're not publishing a binary" | Write-Host
    }
    true;

build_script:
- npm run prepublishOnly
- npm install --build-from-source

test_script:
- ps: npm test

# do it by hand on testing VMs
#- ps: >
#    if ($env:publish_binary -eq "true") {
#      "building and uploading binaries" | Write-Host;
#      npm run prebuild-ci;
#    }
#    true;

deploy: OFF

matrix:
  fast_finish: true

# uncomment the below to have artifacts saved
#artifacts:
#- path: prebuilds
